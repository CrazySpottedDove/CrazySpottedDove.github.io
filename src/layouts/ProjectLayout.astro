---
import AppLayout from "@layouts/AppLayout.astro";

interface Props {
	title: string;
	description: string;
	pubDate: Date;
	url: string;
	updatedDate?: Date;
	tags: string[];
	headings?: {
		depth: number;
		slug: string;
		text: string;
	}[];
}

const {
	title,
	description,
	pubDate,
	url,
	updatedDate,
	tags,
	headings = [],
} = Astro.props;

// 只筛选出 depth === 2 的标题作为目录
const h2Headings = headings.filter((h) => h.depth === 2);

const ogImage = {
	src: `/image/${url}.png`,
	alt: title,
};


---

<AppLayout
	title={title}
	description={description}
	ogImage={ogImage}
	pubDate={updatedDate ?? pubDate}
	tags={tags}
	containerWidth="max-w-7xl"
>
	<div class="flex gap-8">
		<!-- 左侧：根据二级标题生成目录 -->
		<aside class="w-60 flex-shrink-0 fixed top-16">
			<h2 class="text-xl font-bold mb-4 text-blue-500">目录</h2>
			<ul class="space-y-2">
				{
					h2Headings.map(({ slug, text }) => (
						<li>
							<a
								class="text-cyan-600 text-sm font-bold"
								href={`#${slug}`}
							>
								{text}
							</a>
						</li>
					))
				}
			</ul>
		</aside>

		<!-- 右侧：正文插槽 -->
		<main class="flex-1 p-4 ml-60">
			<header class="flex flex-col mb-8">
				<h1
					class="text-2xl sm:text-4xl pb-8 font-bold text-center text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-sky-400"
				>
					{title}
				</h1>
			</header>
			<!-- 博文内容插槽 -->
			<article
				class="prose dark:prose-invert lg:prose-lg dark:prose-code:text-zinc-300 dark:prose-a:text-blue-400 prose-a:text-blue-600 max-w-none hover:prose-a:underline focus:prose-a:underline prose-a:no-underline dark:prose-headings:text-teal-500 prose-img:rounded-lg"
			>
				<slot />
			</article>
		</main>
	</div>
	<style is:global>
		pre,
		code {
			white-space: pre-wrap;
			word-break: break-all;
		}
	</style>
</AppLayout>
